<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), p.props))\p.props" />
  <ItemGroup>
    <PackageReference Include="Antlr4" Version="4.6.4" />
    <PackageReference Include="Antlr4.CodeGenerator" Version="4.6.5-beta001">
      <PrivateAssets>All</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Antlr4.Runtime" Version="4.6.4" />
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="1.1.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.Common" Version="1.1.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="1.1.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Extensions" Version="1.0.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="1.1.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.VisualBasic" Version="1.1.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.VisualBasic.Workspaces" Version="1.1.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.Workspaces.Common" Version="1.1.0" />
    <PackageReference Include="Microsoft.Composition" Version="1.0.27" />
    <PackageReference Include="System.Collections" Version="4.0.0" />
    <PackageReference Include="System.Collections.Immutable" Version="1.1.37" />
    <PackageReference Include="System.Diagnostics.Debug" Version="4.0.0" />
    <PackageReference Include="System.Globalization" Version="4.0.0" />
    <PackageReference Include="System.Linq" Version="4.0.0" />
    <PackageReference Include="System.Reflection.Metadata" Version="1.2.0" />
    <PackageReference Include="System.Resources.ResourceManager" Version="4.0.0" />
    <PackageReference Include="System.Runtime" Version="4.0.0" />
    <PackageReference Include="System.Runtime.Extensions" Version="4.0.0" />
    <PackageReference Include="System.Threading" Version="4.0.0" />
    <PackageReference Include="System.ValueTuple" Version="4.4.0" />
  </ItemGroup>
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">x86</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{ED76217F-2452-4A35-90F6-6EB6CCF2D882}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Microsoft.Pc</RootNamespace>
    <AssemblyName>Compiler</AssemblyName>
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
    <FileAlignment>512</FileAlignment>
    <CodeContractsAssemblyMode>1</CodeContractsAssemblyMode>
    <GPToolsPath>$(ExtFolder)\Formula\Ext</GPToolsPath>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>$(PSdkFolder)\Binaries</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>true</Prefer32Bit>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>False</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>False</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>False</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>False</CodeContractsRedundantAssumptions>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestRequires>True</CodeContractsSuggestRequires>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>%28none%29</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'">
    <OutputPath>$(PSdkFolder)\Binaries</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>$(PSdkFolder)\Binaries</OutputPath>
    <DefineConstants>TRACE;DEBUG</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>true</Prefer32Bit>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>False</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>False</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>False</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>False</CodeContractsRedundantAssumptions>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestRequires>True</CodeContractsSuggestRequires>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>%28none%29</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <OutputPath>$(PSdkFolder)\Binaries</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup>
    <StartupObject />
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System.Core" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="ANTLRCompiler.cs" />
    <Compile Include="Antlr\PParserErrorListener.cs" />
    <Compile Include="Backend\ASTExt\CloneExpr.cs" />
    <Compile Include="Backend\Debugging\IrRenderer.cs" />
    <Compile Include="Backend\Debugging\IrToPseudoP.cs" />
    <Compile Include="Backend\Debugging\ModelDumper.cs" />
    <Compile Include="Backend\TargetLanguage.cs" />
    <Compile Include="Compiler.cs" />
    <Compile Include="CompilerOutput.cs" />
    <Compile Include="CompilerOutputStream.cs" />
    <Compile Include="ConsoleProfiler.cs" />
    <Compile Include="CSharpHelper.cs" />
    <Compile Include="TypeChecker\AST\Declarations\EnumElem.cs" />
    <Compile Include="TypeChecker\AST\Declarations\FunctionSignature.cs" />
    <Compile Include="TypeChecker\AST\Declarations\NamedEventSet.cs" />
    <Compile Include="TypeChecker\AST\Declarations\Function.cs" />
    <Compile Include="TypeChecker\AST\Declarations\Interface.cs" />
    <Compile Include="TypeChecker\AST\Declarations\Machine.cs" />
    <Compile Include="TypeChecker\AST\Declarations\PEvent.cs" />
    <Compile Include="TypeChecker\AST\Declarations\Variable.cs" />
    <Compile Include="TypeChecker\AST\Expressions\BinOpType.cs" />
    <Compile Include="TypeChecker\AST\Expressions\CoerceExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\UnaryOpType.cs" />
    <Compile Include="TypeChecker\AST\ILinearRef.cs" />
    <Compile Include="TypeChecker\AST\IPExpr.cs" />
    <Compile Include="TypeChecker\AST\IPStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\InsertStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\ReceiveStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\RemoveStmt.cs" />
    <Compile Include="TypeChecker\AST\States\EventDefer.cs" />
    <Compile Include="TypeChecker\AST\States\EventDoAction.cs" />
    <Compile Include="TypeChecker\AST\States\EventGotoState.cs" />
    <Compile Include="TypeChecker\AST\States\EventIgnore.cs" />
    <Compile Include="TypeChecker\AST\States\EventPushState.cs" />
    <Compile Include="TypeChecker\AST\Expressions\BoolLiteralExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\CastExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\ContainsKeyExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\CtorExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\DefaultExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\EnumElemRefExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\EventRefExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\FairNondetExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\FloatLiteralExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\FunCallExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\IntLiteralExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\KeysExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\LinearAccessRefExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\LinearType.cs" />
    <Compile Include="TypeChecker\AST\Expressions\MapAccessExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\NamedTupleAccessExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\NamedTupleExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\NondetExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\NullLiteralExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\SeqAccessExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\UnaryOpExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\SizeofExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\BinOpExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\ThisRefExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\TupleAccessExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\UnnamedTupleExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\ValuesExpr.cs" />
    <Compile Include="TypeChecker\AST\Expressions\VariableAccessExpr.cs" />
    <Compile Include="TypeChecker\AST\IHasScope.cs" />
    <Compile Include="TypeChecker\AST\IPDecl.cs" />
    <Compile Include="TypeChecker\AST\IStateAction.cs" />
    <Compile Include="TypeChecker\AST\IStateContainer.cs" />
    <Compile Include="TypeChecker\DeclarationStubVisitor.cs" />
    <Compile Include="TypeChecker\DeclarationVisitor.cs" />
    <Compile Include="TypeChecker\FunctionBodyVisitor.cs" />
    <Compile Include="Backend\IRTransformer.cs" />
    <Compile Include="TypeChecker\LinearTypeChecker.cs" />
    <Compile Include="TypeChecker\TypeCheckingUtils.cs" />
    <Compile Include="TypeChecker\Types\NamedTupleEntry.cs" />
    <Compile Include="TypeChecker\AST\IPAST.cs" />
    <Compile Include="TypeChecker\AST\Declarations\PEnum.cs" />
    <Compile Include="TypeChecker\AST\States\State.cs" />
    <Compile Include="TypeChecker\AST\States\StateGroup.cs" />
    <Compile Include="TypeChecker\AST\Statements\AnnounceStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\AssertStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\AssignStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\CompoundStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\CtorStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\FunCallStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\GotoStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\IfStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\MoveAssignStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\NoStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\PopStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\PrintStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\RaiseStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\ReturnStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\SendStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\SwapAssignStmt.cs" />
    <Compile Include="TypeChecker\AST\Statements\WhileStmt.cs" />
    <Compile Include="TypeChecker\AST\Declarations\TypeDef.cs" />
    <Compile Include="TypeChecker\DefaultTranslationErrorHandler.cs" />
    <Compile Include="Domains\P.4ml.g.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>P.4ml</DependentUpon>
    </Compile>
    <Compile Include="Domains\PLink.4ml.g.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>PLink.4ml</DependentUpon>
    </Compile>
    <Compile Include="CommandLineOptions.cs" />
    <Compile Include="ErrorReporter.cs" />
    <Compile Include="EventInfo.cs" />
    <Compile Include="FunInfo.cs" />
    <Compile Include="ICompiler.cs" />
    <Compile Include="ICompilerOutput.cs" />
    <Compile Include="IProfiler.cs" />
    <Compile Include="LivenessOption.cs" />
    <Compile Include="LocalVariableInfo.cs" />
    <Compile Include="LProgram.cs" />
    <Compile Include="MachineInfo.cs" />
    <Compile Include="PToCSharpCompiler.MkFunctionDecl.cs" />
    <Compile Include="PToCSharpCompiler.MkMachineClass.cs" />
    <Compile Include="NullProfiler.cs" />
    <Compile Include="Parser\LParser.cs" />
    <Compile Include="Parser\PParser.cs" />
    <Compile Include="Parser\ShiftReduceParserCode.cs" />
    <Compile Include="PData.cs" />
    <Compile Include="PProgram.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="PToCSharpCompiler.cs" />
    <Compile Include="PToCSharpLinker.cs" />
    <Compile Include="PToZing.cs" />
    <Compile Include="PToZing.TypeTranslationContext.cs" />
    <Compile Include="PToZing.ZingFoldContext.cs" />
    <Compile Include="PTranslation.cs" />
    <Compile Include="SourceInfo.cs" />
    <Compile Include="SpecType.cs" />
    <Compile Include="StandardOutput.cs" />
    <Compile Include="PToCSharpCompiler.TypeTranslationContext.cs" />
    <Compile Include="StateInfo.cs" />
    <Compile Include="StateTemperature.cs" />
    <Compile Include="TransitionInfo.cs" />
    <Compile Include="TypeChecker\Analyzer.cs" />
    <Compile Include="PProgramModel.cs" />
    <Compile Include="TypeChecker\Scope.cs" />
    <Compile Include="TypeChecker\ExprVisitor.cs" />
    <Compile Include="TypeChecker\ITranslationErrorHandler.cs" />
    <Compile Include="TypeChecker\StackProperty.cs" />
    <Compile Include="TypeChecker\TranslationException.cs" />
    <Compile Include="TypeChecker\StatementVisitor.cs" />
    <Compile Include="TypeChecker\TypeResolver.cs" />
    <Compile Include="TypeChecker\Types\BoundedType.cs" />
    <Compile Include="TypeChecker\Types\EnumType.cs" />
    <Compile Include="TypeChecker\Types\ForeignType.cs" />
    <Compile Include="TypeChecker\Types\MapType.cs" />
    <Compile Include="TypeChecker\Types\NamedTupleType.cs" />
    <Compile Include="TypeChecker\Types\PermissionType.cs" />
    <Compile Include="TypeChecker\Types\PLanguageType.cs" />
    <Compile Include="TypeChecker\Types\PrimitiveType.cs" />
    <Compile Include="TypeChecker\Types\SequenceType.cs" />
    <Compile Include="TypeChecker\Types\TupleType.cs" />
    <Compile Include="TypeChecker\Types\TypeDefType.cs" />
    <Compile Include="TypeChecker\Types\TypeKind.cs" />
    <Compile Include="TypeChecker\Validator.cs" />
    <Compile Include="VariableInfo.cs" />
    <Compile Include="XmlProfiler.cs" />
    <Compile Include="ZingData.cs" />
    <Compile Include="ZingTranslationInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <Antlr4 Include="Antlr\PLexer.g4">
      <Generator>MSBuild:Compile</Generator>
      <CustomToolNamespace>Microsoft.Pc.Antlr</CustomToolNamespace>
    </Antlr4>
    <Antlr4 Include="Antlr\PParser.g4">
      <Generator>MSBuild:Compile</Generator>
      <CustomToolNamespace>Microsoft.Pc.Antlr</CustomToolNamespace>
      <Listener>True</Listener>
      <Visitor>True</Visitor>
    </Antlr4>
    <None Include="App.config" />
    <EmbeddedResource Include="Domains\C.4ml" />
    <EmbeddedResource Include="Domains\P.4ml">
      <Generator>FormulaCodeGenerator</Generator>
      <CustomToolNamespace>Microsoft.Pc.Domains</CustomToolNamespace>
      <LastGenOutput>P.4ml.g.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Include="Domains\Zing.4ml" />
    <EmbeddedResource Include="Zing\Prt.zing" />
    <EmbeddedResource Include="Zing\PrtTypes.zing" />
    <EmbeddedResource Include="Zing\PrtValues.zing" />
    <EmbeddedResource Include="Zing\Minimal.zing" />
    <EmbeddedResource Include="Domains\PLink.4ml">
      <Generator>FormulaCodeGenerator</Generator>
      <CustomToolNamespace>Microsoft.Pc.Domains</CustomToolNamespace>
      <LastGenOutput>PLink.4ml.g.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Include="Domains\P2CProgram.4ml" />
    <EmbeddedResource Include="Domains\PWithInferredTypes.4ml" />
    <EmbeddedResource Include="Templates\PSharp.stg" />
    <None Include="Templates\Prt.stg" />
    <None Include="Templates\Prt_h.stg" />
  </ItemGroup>
  <ItemGroup>
    <MPLexCompile Include="Parser\Lexer.lex" />
    <MPPGCompileParser Include="Parser\PParser.y" />
    <MPPGCompileTempParser Include="Parser\LParser.y" />
    <MPPGCompileToken Include="Parser\Tokens.y" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\..\Ext\Formula\Src\Core\Core.csproj">
      <Project>{1b5724ec-fff1-48d7-a700-ad46f0150afc}</Project>
      <Name>Core</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\Parsers\CParser\CParser.csproj">
      <Project>{55afea71-da6d-4258-9193-29942ebbbe48}</Project>
      <Name>CParser</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\Parsers\ZingParser\ZingParser.csproj">
      <Project>{09a73016-0395-4014-8f26-0dd25ed81d12}</Project>
      <Name>ZingParser</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Analyzer Include="..\..\..\packages\Microsoft.CodeAnalysis.Analyzers.1.1.0\analyzers\dotnet\cs\Microsoft.CodeAnalysis.Analyzers.dll" />
    <Analyzer Include="..\..\..\packages\Microsoft.CodeAnalysis.Analyzers.1.1.0\analyzers\dotnet\cs\Microsoft.CodeAnalysis.CSharp.Analyzers.dll" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(PTargets)\compiler.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <PropertyGroup>
    <!--Make sure that the lexer runs before the C# compiler-->
    <CoreCompileDependsOn>$(CoreCompileDependsOn);GenerateCodeFromLex;</CoreCompileDependsOn>
  </PropertyGroup>
  <PropertyGroup Condition="'$(OS)' == 'Windows_NT'">
    <GPLexCmd>"$(GPToolsPath)\GPLEX\gplex45.exe"</GPLexCmd>
  </PropertyGroup>
  <PropertyGroup Condition="'$(OS)' != 'Windows_NT'">
    <GPLexCmd>mono $(GPToolsPath)\GPLEX\gplex45.exe</GPLexCmd>
  </PropertyGroup>
  <Target Name="GenerateCodeFromLex" Condition="'$(BuildingProject)'!='false'" Inputs="@(MPLexCompile);$(LexFrameFile)" Outputs="@(MPLexCompile->'$(IntermediateOutputPath)%(FileName).g.cs')" DependsOnTargets="$(GenerateCodeFromLexDependsOn)">
    <!--Run the command line tool that generates the cs files.-->
    <Exec Command="$(GPLexCmd) /babel /unicode /out:@(MPLexCompile->'$(IntermediateOutputPath)%(FileName).g.cs') @(MPLexCompile)" />
    <!--Add the generated files to the list of the files to compile.-->
    <CreateItem Include="@(MPLexCompile->'$(IntermediateOutputPath)%(FileName).g.cs')">
      <Output TaskParameter="Include" ItemName="Compile" />
      <Output TaskParameter="Include" ItemName="FileWrites" />
    </CreateItem>
  </Target>
  <!--
    =======================================================================================================
                                      Generate parser code from Y files
    =======================================================================================================
  -->
  <PropertyGroup>
    <GenerateParserCodeFromGrammarDependsOn>$(GenerateParserCodeFromGrammarDependsOn)</GenerateParserCodeFromGrammarDependsOn>
    <CoreCompileDependsOn>$(CoreCompileDependsOn);GenerateParserCodeFromGrammar</CoreCompileDependsOn>
  </PropertyGroup>
  <PropertyGroup Condition="'$(OS)' == 'Windows_NT'">
    <CpCmd>copy /Y</CpCmd>
  </PropertyGroup>
  <PropertyGroup Condition="'$(OS)' != 'Windows_NT'">
    <CpCmd>cp</CpCmd>
  </PropertyGroup>
  <PropertyGroup>
    <PostBuildEvent>
      $(CpCmd) $(ProjectDir)\Domains\P.4ml $(OutDir)
      $(CpCmd) $(ProjectDir)\Domains\PLink.4ml $(OutDir)
      $(CpCmd) $(ProjectDir)\Domains\C.4ml $(OutDir)
      $(CpCmd) $(ProjectDir)\Domains\Zing.4ml $(OutDir)
      $(CpCmd) $(ProjectDir)\Domains\P2CProgram.4ml $(OutDir)
      $(CpCmd) $(ProjectDir)\Domains\PWithInferredTypes.4ml $(OutDir)
    </PostBuildEvent>
  </PropertyGroup>
  <PropertyGroup Condition="'$(OS)' == 'Windows_NT'">
    <GPPGCmd>"$(GPToolsPath)\GPPG\gppg45.exe"</GPPGCmd>
  </PropertyGroup>
  <PropertyGroup Condition="'$(OS)' != 'Windows_NT'">
    <GPPGCmd>mono $(GPToolsPath)\GPPG\gppg45.exe</GPPGCmd>
  </PropertyGroup>
  <Target Name="GenerateParserCodeFromGrammar" Condition="'$(BuildingProject)'!='false'" Inputs="@(MPPGCompileParser)" Outputs="@(MPPGCompileParser->'$(IntermediateOutputPath)%(FileName).g.cs')" DependsOnTargets="$(GenerateParserCodeFromGrammarDependsOn)">
    <!--Run the command line tool that generates the cs files.-->
    <Exec Command="$(GPPGCmd) -report -verbose -conflicts @(MPPGCompileToken) &gt; @(MPPGCompileToken->'$(IntermediateOutputPath)%(FileName).g.cs')" />
    <Exec Command="$(GPPGCmd) -babel -gplex -report -verbose -conflicts @(MPPGCompileParser) &gt; @(MPPGCompileParser->'$(IntermediateOutputPath)%(FileName).g.cs')" />
    <Exec Command="$(GPPGCmd) -report -verbose -conflicts @(MPPGCompileTempParser) &gt; @(MPPGCompileTempParser->'$(IntermediateOutputPath)%(FileName).g.cs')" />
    <!--Add the generated files to the list of the files to compile.-->
    <CreateItem Include="@(MPPGCompileParser->'$(IntermediateOutputPath)%(FileName).g.cs')">
      <Output TaskParameter="Include" ItemName="Compile" />
      <Output TaskParameter="Include" ItemName="FileWrites" />
    </CreateItem>
    <CreateItem Include="@(MPPGCompileToken->'$(IntermediateOutputPath)%(FileName).g.cs')">
      <Output TaskParameter="Include" ItemName="Compile" />
      <Output TaskParameter="Include" ItemName="FileWrites" />
    </CreateItem>
    <CreateItem Include="@(MPPGCompileTempParser->'$(IntermediateOutputPath)%(FileName).g.cs')">
      <Output TaskParameter="Include" ItemName="Compile" />
      <Output TaskParameter="Include" ItemName="FileWrites" />
    </CreateItem>
  </Target>
  <!-- Start Formula code generator MSBuild integration -->
  <Import Project="..\..\..\Ext\Formula\Src\Extensions\FormulaCodeGeneratorTask\FormulaCodeGeneratorTask.Targets" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\..\..\packages\Antlr4.CodeGenerator.4.6.5-beta001\build\Antlr4.CodeGenerator.props')" Text="$([System.String]::Format('$(ErrorText)', '..\..\..\packages\Antlr4.CodeGenerator.4.6.5-beta001\build\Antlr4.CodeGenerator.props'))" />
    <Error Condition="!Exists('..\..\..\packages\Antlr4.CodeGenerator.4.6.5-beta001\build\Antlr4.CodeGenerator.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\..\..\packages\Antlr4.CodeGenerator.4.6.5-beta001\build\Antlr4.CodeGenerator.targets'))" />
  </Target>
  <Import Project="..\..\..\packages\Antlr4.CodeGenerator.4.6.5-beta001\build\Antlr4.CodeGenerator.targets" Condition="Exists('..\..\..\packages\Antlr4.CodeGenerator.4.6.5-beta001\build\Antlr4.CodeGenerator.targets')" />
</Project>